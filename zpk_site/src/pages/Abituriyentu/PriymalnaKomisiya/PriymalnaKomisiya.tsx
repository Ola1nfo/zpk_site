import './PriymalnaKomisiya.scss'
import Footer from '../../../components/Footer/Footer'
import Header from '../../../components/Header/Header'
import { useEffect, useRef, useState } from 'react'
import { MapContainer, TileLayer, Marker, Popup, useMap } from 'react-leaflet'
import 'leaflet/dist/leaflet.css'
import L from 'leaflet'
import { motion, AnimatePresence } from 'framer-motion'

// ‚úÖ –Ü–∫–æ–Ω–∫–∞ –¥–ª—è –º–∞—Ä–∫–µ—Ä–∞
const customIcon = new L.Icon({
  iconUrl: 'https://cdn-icons-png.flaticon.com/512/684/684908.png',
  iconSize: [40, 40],
  iconAnchor: [20, 40],
  popupAnchor: [0, -35],
})

// ‚úÖ –ü–æ–∑–∏—Ü—ñ—è –∫–æ–ª–µ–¥–∂—É
const position: [number, number] = [50.5241152, 26.2533035]

// ‚úÖ –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –ø–ª–∞–≤–Ω–æ–≥–æ –ø–æ–ª—å–æ—Ç—É
function FlyToMarker({ position }: { position: [number, number] }) {
  const map = useMap()
  useEffect(() => {
    map.flyTo(position, 17, { duration: 2 })
  }, [map, position])
  return null
}

// ‚úÖ –ö–Ω–æ–ø–∫–∞ "–ø–µ—Ä–µ–ª—ñ—Ç –¥–æ –º–∞—Ä–∫–µ—Ä–∞"
function MapAddressButton({ position }: { position: [number, number] }) {
  const map = useMap()
  const handleClick = () => {
    map.flyTo(position, 17, { animate: true, duration: 1.5 })
  }
  return (
    <div className="map-address-label" onClick={handleClick}>
      üìç –†—ñ–≤–Ω–µ–Ω—Å—å–∫–∞ –æ–±–ª., –º. –ó–¥–æ–ª–±—É–Ω—ñ–≤, –≤—É–ª. –Ø—Å–Ω–∞, 6
    </div>
  )
}

export default function PriymalnaKomisiya() {
  const speed = 1 // —à–≤–∏–¥–∫—ñ—Å—Ç—å —Å–∏–º—É–ª—è—Ü—ñ—ó —á–∞—Å—É
  const [timeLeft, setTimeLeft] = useState<{ days: number; hours: number; minutes: number; seconds: number } | null>(null)
  const [isLoading, setIsLoading] = useState(true)
  const [isStarted, setIsStarted] = useState(false)
  const startRealRef = useRef<number | null>(null)

  useEffect(() => {
    const targetDate = new Date('2026-06-01T09:00:00').getTime()
    if (startRealRef.current === null) startRealRef.current = Date.now()

    const tick = () => {
      const nowReal = Date.now()
      const startReal = startRealRef.current as number
      const nowSim = startReal + Math.floor((nowReal - startReal) * speed)
      const diff = targetDate - nowSim

      if (diff > 0) {
        const totalSeconds = Math.floor(diff / 1000)
        const days = Math.floor(totalSeconds / (24 * 3600))
        const hours = Math.floor((totalSeconds % (24 * 3600)) / 3600)
        const minutes = Math.floor((totalSeconds % 3600) / 60)
        const seconds = totalSeconds % 60
        setTimeLeft({ days, hours, minutes, seconds })
        setIsStarted(false)
      } else {
        setTimeLeft({ days: 0, hours: 0, minutes: 0, seconds: 0 })
        setIsStarted(true)
      }

      setIsLoading(false)
    }

    tick()
    const interval = setInterval(tick, 1000)
    return () => clearInterval(interval)
  }, [speed])

  return (
    <div>
      <Header />
      <div className="container priymalna-komisiya">
        <h4>–î–æ –ø–æ—á–∞—Ç–∫—É —Ä–æ–±–æ—Ç–∏ –ø—Ä–∏–π–º–∞–ª—å–Ω–æ—ó –∫–æ–º—ñ—Å—ñ—ó —É 2026 —Ä–æ—Ü—ñ</h4>

        <AnimatePresence>
          {isLoading ? (
            <motion.div key="loading" className="loading" initial={{ opacity: 0 }} animate={{ opacity: 1 }} exit={{ opacity: 0 }}>
              <div className="spinner-border text-primary" role="status"></div>
              <p>–û–±—á–∏—Å–ª–µ–Ω–Ω—è —á–∞—Å—É...</p>
            </motion.div>
          ) : isStarted ? (
            <motion.div key="started" className="started-message" initial={{ opacity: 0, scale: 0.95 }} animate={{ opacity: 1, scale: 1 }}>
              üéâ –ü—Ä–∏–π–º–∞–ª—å–Ω–∞ –∫–æ–º—ñ—Å—ñ—è –≤–∂–µ –ø—Ä–∞—Ü—é—î! –ó–∞–≤—ñ—Ç–∞–π—Ç–µ –¥–æ –Ω–∞—Å!
            </motion.div>
          ) : (
            <motion.div key="timer" className="counter" initial={{ opacity: 0, y: 20 }} animate={{ opacity: 1, y: 0 }}>
              <div className="counter-box"><span>{timeLeft?.days ?? '--'}</span><p>–¥–Ω—ñ–≤</p></div>
              <div className="counter-box"><span>{timeLeft?.hours ?? '--'}</span><p>–≥–æ–¥–∏–Ω</p></div>
              <div className="counter-box"><span>{timeLeft?.minutes ?? '--'}</span><p>—Ö–≤–∏–ª–∏–Ω</p></div>
              <div className="counter-box small"><span>{timeLeft?.seconds ?? '--'}</span><p>—Å–µ–∫—É–Ω–¥</p></div>
            </motion.div>
          )}
        </AnimatePresence>

        {!isStarted && !isLoading && (
          <motion.p initial={{ opacity: 0 }} animate={{ opacity: 1 }} transition={{ delay: 0.3 }}>
            –¶–µ —Å–≤—ñ–¥—á–∏—Ç—å –ø—Ä–æ —Ç–µ, —â–æ –≤—Å—Ç—É–ø–Ω–∞ –∫–∞–º–ø–∞–Ω—ñ—è 2026 —Ä–æ–∫—É —Ä–æ–∑–ø–æ—á–Ω–µ—Ç—å—Å—è –Ω–µ–∑–∞–±–∞—Ä–æ–º. –í–∏ –º–æ–∂–µ—Ç–µ –∑–∞–≤—ñ—Ç–∞—Ç–∏ –¥–æ –Ω–∞—Å
            –Ω–∞ –¥–Ω—ñ –≤—ñ–¥–∫—Ä–∏—Ç–∏—Ö –¥–≤–µ—Ä–µ–π –∞–±–æ –≤ –±—É–¥—å-—è–∫–∏–π –±—É–¥–Ω—ñ–π –¥–µ–Ω—å. –ó–∞–≤–∂–¥–∏ —Ä–∞–¥—ñ –≤–∞—Å –±–∞—á–∏—Ç–∏!
          </motion.p>
        )}

        <h4>–ß–µ–∫–∞—î–º–æ –í–∞—Å!</h4>

        {/* –¢–∞–±–ª–∏—Ü—è */}
        <table className="schedule">
          <thead><tr><th>–î–Ω—ñ —Ç–∏–∂–Ω—è</th><th>–ß–∞—Å</th></tr></thead>
          <tbody>
            <tr><td>–ø–æ–Ω–µ–¥—ñ–ª–æ–∫</td><td>08:00‚Äì16:00</td></tr>
            <tr><td>–≤—ñ–≤—Ç–æ—Ä–æ–∫</td><td>08:00‚Äì16:00</td></tr>
            <tr><td>—Å–µ—Ä–µ–¥–∞</td><td>08:00‚Äì16:00</td></tr>
            <tr><td>—á–µ—Ç–≤–µ—Ä</td><td>08:00‚Äì16:00</td></tr>
            <tr><td>–ø'—è—Ç–Ω–∏—Ü—è</td><td>08:00‚Äì16:00</td></tr>
            <tr><td>—Å—É–±–æ—Ç–∞</td><td>–≤–∏—Ö—ñ–¥–Ω–∏–π</td></tr>
            <tr><td>–Ω–µ–¥—ñ–ª—è</td><td>–≤–∏—Ö—ñ–¥–Ω–∏–π</td></tr>
          </tbody>
        </table>

        {/* –ö–æ–Ω—Ç–∞–∫—Ç–∏ */}
        <div className="contacts">
          <div className="contact-item"><span><i className="bi bi-envelope-fill"></i></span><p>zplzt@ukr.net</p></div>
          <div className="contact-item"><span><i className="bi bi-telephone-fill"></i></span><p>098 523 74 94</p></div>
          <div className="contact-item"><span><i className="bi bi-geo-alt-fill"></i></span><p>–£–∫—Ä–∞—ó–Ω–∞, –†—ñ–≤–Ω–µ–Ω—Å—å–∫–∞ –æ–±–ª., –º. –ó–¥–æ–ª–±—É–Ω—ñ–≤, –≤—É–ª. –Ø—Å–Ω–∞, 6</p></div>
        </div>
      </div>

      {/* ‚úÖ –ú–∞–ø–∞ –∑ –º–∞—Ä–∫–µ—Ä–æ–º —ñ –∫–Ω–æ–ø–∫–æ—é */}
      <div className="custom-map-container">
        <MapContainer center={position} zoom={16} scrollWheelZoom={false} style={{ height: '450px', width: '100%', borderRadius: '15px' }}>
          <TileLayer url="https://mt1.google.com/vt/lyrs=y&x={x}&y={y}&z={z}" attribution='&copy; Google' />
          <Marker position={position} icon={customIcon}>
            <Popup>
              <strong>–ó–¥–æ–ª–±—É–Ω—ñ–≤—Å—å–∫–∏–π –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–π –∫–æ–ª–µ–¥–∂</strong><br />
              –≤—É–ª. –Ø—Å–Ω–∞, 6, –ó–¥–æ–ª–±—É–Ω—ñ–≤
            </Popup>
          </Marker>
          <FlyToMarker position={position} />
          <MapAddressButton position={position} />
        </MapContainer>
      </div>

      <Footer />
    </div>
  )
}
